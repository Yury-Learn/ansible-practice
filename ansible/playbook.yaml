##### LEMP #####

---

- hosts: hosts
  become: true

  tasks:

  #  NGINX  #

  - name: "Install nginx via apt"
    ansible.builtin.apt:
      name: "nginx"
      state: latest
      update_cache: true

  - name: "Delete /var/www/html"
    ansible.builtin.file:
      path: "/var/www/html"
      state: absent

  - name: "Copy our landing to /var/www/html"
    ansible.builtin.copy:
      src: "../2.lemp-ansible/writing_playbook/ansible/files/html"
      dest: "/var/www/"
      owner: "ansible_user"
      group: "ansible_user"
      mode: "0644"

  #  MYSQL  #

  - name: "Install mysql via apt"
    ansible.builtin.apt:
      name: "mysql-server"
      state: "latest"
      update_cache: true

  - name: "Install pymsql via apt"
    ansible.builtin.apt:
      name: "python3-pymysql"
      state: "latest"
      update_cache: true

  - name: "Set up root user"
    community.mysql.mysql_user: # модуль для управления пользователями
      name: "root" # имя пользователя для редактирования, обратите внимание на единообразие параметров модулей
      password: "password" # пароль пользователя для редактирования
      login_user: "root" # имя пользователя, под которым вносим изменения
      login_password: "password" # пароль пользователя под которым редактируем
      check_implicit_admin: true # сначала попробует зайти без пароля
      login_unix_socket: "/var/run/mysqld/mysqld.sock" # если mysql работает через сокет, вместо коннекта через порт, то нужен этот путь   


  - name: "Remove anonymous users"
    community.mysql.mysql_user:
      name: "" # анонимные пользователи не имеют имени
      state: "absent" # как и с модулем file - удалить
      login_user: "root"
      login_password: "password"


  - name: "Remove test database"
    community.mysql.mysql_db: # модуль для управления базами данных
      name: "test" # тут это имя базы
      state: "absent" # как и с модулем file - удалить
      login_user: "root"
      login_password: "password"

    #  PHP  #    

  - name: "Installing php fpm and php mysql"
    ansible.builtin.apt:
      name: "{{ item }}"
      state: "latest"
      update_cache: true
    with_items: 
      - "php-fpm"
      - "php-mysql"


  - name: "Copy php to /var/www/"
    ansible.builtin.copy:
      src: "../2.lemp-ansible/writing_playbook/ansible/files/test-php"
      dest: "/var/www/"
      owner: "ansible_user"
      group: "ansible_user"
      mode: "0644"


  - name: "Copy nginx config"
    ansible.builtin.copy:
      src: "../2.lemp-ansible/writing_playbook/ansible/files/test-php/ngnx.conf"
      dest: "/etc/nginx/sites-available/php_test.conf"
      owner: "ansible_user"
      group: "ansible_user"
      mode: "0644"

  - name: "Link folder"
    ansible.builtin.file:
      src: "/etc/nginx/sites-available/php_test.conf"
      dest: "/etc/nginx/sites-enabled/php_test"
      state: "link" # здесь создаем симлинк      

  - name: "Reload nginx"
    ansible.builtin.service:
      name: "nginx"
      state: "reloaded"   
  